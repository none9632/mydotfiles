# -*- eval: (my/org-config-mode) -*-

#+TITILE: My dotfiles
#+STARTUP: fold

* Install script
** Variables

#+begin_src sh :tangle-mode (identity #o755) :tangle ./install.sh 

  dir=$(pwd)                              # dotfiles directory
  bakdir=~/.dotfiles.bak                  # old dotfiles backup directory
  packages="alacritty neofetch rofi maim" # list of packages that will be installed
  config_files="alacritty neofetch"       # list of files/folders to symlink in homedir

#+end_src

** Functions

#+begin_src sh :tangle-mode (identity #o755) :tangle ./install.sh 

  error()
  {
      printf "error: %s\n" "$1" >&2
      exit 1
  }

#+end_src

** The actual script

#+begin_src sh :tangle-mode (identity #o755) :tangle ./install.sh 

  if [[ ! "$EUID" = 0 ]]; then
      sudo ls /root
  fi

  # install yay
  if [[ ! -f /usr/bin/yay ]]
  then
      sudo pacman --noconfirm --needed -S git base-devel
      cd $(mktemp -d)
      git clone https://aur.archlinux.org/yay.git
      cd yay
      makepkg --noconfirm -scri
  fi

  # install the necessary packages
  yay --noconfirm --needed -Sy $packages

  # create dotfiles_old in homedir
  [ -d $bakdir ] && rm -rf $bakdir
  echo "Creating $bakdir for backup of any existing config files"
  mkdir -p $bakdir
  mkdir -p $bakdir/.config

  # move any existing dotfiles in homedir to  directory, then create symlinks
  for file in $config_files
  do
      if [ -d ~/.config/$file ]
      then
          echo "Moving $file from ~/.config to $bakdir/.config"
          mv ~/.config/$file $bakdir/.config 2> /dev/null
      fi
  done

  for file in $config_files
  do
      echo "Creating symlink to $file in home directory."
      ln -s $dir/.config/$file ~/.config/$file
  done

#+end_src

* Alacritty

Configuration for Alacritty, the GPU enhanced terminal emulator.

** Import

Import additional configuration files

Imports are loaded in order, skipping all missing files, with the importing file being loaded last.
If a field is already present in a previous import, it will be replaced.

All imports must either be absolute paths starting with `/`, or paths relative to the user's home
directory starting with `~/`.

#+begin_src sh

  #import:
  #  - /path/to/alacritty.yml

#+end_src

** Env

Any items in the `env` entry below will be added as environment variables. Some entries may override
variables set by alacritty itself.

#+begin_src sh

  env:
    # TERM variable
    #
    # This value is used to set the `$TERM` environment variable for
    # each instance of Alacritty. If it is not present, alacritty will
    # check the local terminfo database and use `alacritty` if it is
    # available, otherwise `xterm-256color` is used.
    TERM: alacritty

#+end_src

** Window

#+begin_src sh

  window:
    # Window dimensions (changes require restart)
    #
    # Number of lines/columns (not pixels) in the terminal. The number of columns
    # must be at least `2`, while using a value of `0` for columns and lines will
    # fall back to the window manager's recommended size.
    #dimensions:
    #  columns: 0
    #  lines: 0

    # Window position (changes require restart)
    #
    # Specified in number of pixels.
    # If the position is not set, the window manager will handle the placement.
    #position:
    #  x: 0
    #  y: 0

    # Window padding (changes require restart)
    #
    # Blank space added around the window in pixels. This padding is scaled
    # by DPI and the specified value is always added at both opposing sides.
    padding:
     x: 8
     y: 8

    # Spread additional padding evenly around the terminal content.
    #dynamic_padding: false

    # Window decorations
    #
    # Values for `decorations`:
    #     - full: Borders and title bar
    #     - none: Neither borders nor title bar
    #
    # Values for `decorations` (macOS only):
    #     - transparent: Title bar, transparent background and title bar buttons
    #     - buttonless: Title bar, transparent background and no title bar buttons
    #decorations: full

    # Startup Mode (changes require restart)
    #
    # Values for `startup_mode`:
    #   - Windowed
    #   - Maximized
    #   - Fullscreen
    #
    # Values for `startup_mode` (macOS only):
    #   - SimpleFullscreen
    #startup_mode: Windowed

    # Window title
    #title: Alacritty

    # Allow terminal applications to change Alacritty's window title.
    #dynamic_title: true

    # Window class (Linux/BSD only):
    #class:
      # Application instance name
      #instance: Alacritty
      # General application class
      #general: Alacritty

    # GTK theme variant (Linux/BSD only)
    #
    # Override the variant of the GTK theme. Commonly supported values are `dark`
    # and `light`. Set this to `None` to use the default theme variant.
    #gtk_theme_variant: None

#+end_src

** Scrolling

#+begin_src sh

  scrolling:
    # Maximum number of lines in the scrollback buffer.
    # Specifying '0' will disable scrolling.
    history: 10000

    # Scrolling distance multiplier.
    #multiplier: 3
	
#+end_src

** Font configuration

#+begin_src sh

  font:
    normal:
      family: SauceCodePro Nerd Font
      style: Regular

    bold:
      family: SauceCodePro Nerd Font
      style: Bold

    italic:
      family: SauceCodePro Nerd Font
      style: Italic

    bold_italic:
      family: SauceCodePro Nerd Font
      style: Bold Italic

    # Point size
    size: 8.0

    # Offset is the extra space around each character. `offset.y` can be thought
    # of as modifying the line spacing, and `offset.x` as modifying the letter
    # spacing.
    offset:
      x: 0
      y: 0

    # Glyph offset determines the locations of the glyphs within their cells with
    # the default being at the bottom. Increasing `x` moves the glyph to the
    # right, increasing `y` moves the glyph upward.
    #glyph_offset:
    #  x: 0
    #  y: 0

  # If `true`, bold text is drawn using the bright color variants.
  #draw_bold_text_with_bright_colors: false

#+end_src

** Colors

#+begin_src sh

  colors:
    # Default colors
    primary:
      # background: '#21242b'
      background: '#1c252a'
      foreground: '#bbc2cf'

      # Bright and dim foreground colors
      #
      # The dimmed foreground color is calculated automatically if it is not
      # present. If the bright foreground color is not set, or
      # `draw_bold_text_with_bright_colors` is `false`, the normal foreground
      # color will be used.
      #dim_foreground: '#828482'
      #bright_foreground: '#eaeaea'

    # Cursor colors
    #
    # Colors which should be used to draw the terminal cursor.
    #
    # Allowed values are CellForeground and CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    #cursor:
    #  text: CellBackground
    #  cursor: CellForeground

    # Vi mode cursor colors
    #
    # Colors for the cursor when the vi mode is active.
    #
    # Allowed values are CellForeground and CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    #vi_mode_cursor:
    #  text: CellBackground
    #  cursor: CellForeground

    # Search colors
    #
    # Colors used for the search bar and match highlighting.
    #search:
      # Allowed values are CellForeground and CellBackground, which reference the
      # affected cell, or hexadecimal colors like #ff00ff.
      #matches:
      #  foreground: '#51afef'
      #  background: '#bbc2cf'
      #focused_match:
      #  foreground: CellBackground
      #  background: CellForeground

      #bar:
      #  background: '#c5c8c6'
      #  foreground: '#1d1f21'

    # Line indicator
    #
    # Color used for the indicator displaying the position in history during
    # search and vi mode.
    #
    # By default, these will use the opposing primary color.
    #line_indicator:
    #  foreground: None
    #  background: None

    # Selection colors
    #
    # Colors which should be used to draw the selection area.
    #
    # Allowed values are CellForeground and CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    #selection:
    # text: '#bbc2cf'
    # background: '#ffffff'

    # Normal colors

    normal:
      # black:   '#141c21'
      # black:   '#161e22'
      black:   '#182024'
      red:     '#ff6c6b'
      green:   '#98be65'
      yellow:  '#da8548'
      # yellow:  '#ffaf00'
      blue:    '#51afef'
      magenta: '#d499e5'
      cyan:    '#5699af'
      white:   '#bbc2cf'
    # normal:
      # black:   '#1c1f24'
      # red:     '#ff6c6b'
      # green:   '#98be65'
      # yellow:  '#da8548'
      # blue:    '#51afef'
      # magenta: '#d499e5'
      # cyan:    '#5699af'
      # white:   '#42444a'

    # Bright colors
    bright:
      black:   '#7b7278'
      red:     '#da8548'
      green:   '#4db5bd'
      yellow:  '#ffaf00'
      blue:    '#51afef'
      magenta: '#a9a1e1'
      cyan:    '#46d9ff'
      white:   '#dfdfdf'

    # Dim colors
    #
    # If the dim colors are not set, they will be calculated automatically based
    # on the `normal` colors.
    #dim:
    #  black:   '#131415'
    #  red:     '#864343'
    #  green:   '#777c44'
    #  yellow:  '#9e824c'
    #  blue:    '#556a7d'
    #  magenta: '#75617b'
    #  cyan:    '#5b7d78'
    #  white:   '#828482'

    # Indexed Colors
    #
    # The indexed colors include all colors from 16 to 256.
    # When these are not set, they're filled with sensible defaults.
    #
    # Example:
    #   `- { index: 16, color: '#ff00ff' }`
    #
    #indexed_colors: []

#+end_src

** Bell

The bell is rung every time the BEL control character is received.

#+begin_src sh

  #bell:
    # Visual Bell Animation
    #
    # Animation effect for flashing the screen when the visual bell is rung.
    #
    # Values for `animation`:
    #   - Ease
    #   - EaseOut
    #   - EaseOutSine
    #   - EaseOutQuad
    #   - EaseOutCubic
    #   - EaseOutQuart
    #   - EaseOutQuint
    #   - EaseOutExpo
    #   - EaseOutCirc
    #   - Linear
    #animation: EaseOutExpo

    # Duration of the visual bell flash in milliseconds. A `duration` of `0` will
    # disable the visual bell animation.
    #duration: 0

    # Visual bell animation color.
    #color: '#ffffff'

    # Bell Command
    #
    # This program is executed whenever the bell is rung.
    #
    # When set to `command: None`, no command will be executed.
    #
    # Example:
    #   command:
    #     program: notify-send
    #     args: ["Hello, World!"]
    #
    #command: None

#+end_src

** Opacity

Window opacity as a floating point number from `0.0` to `1.0`. The value `0.0` is completely
transparent and `1.0` is opaque.

#+begin_src sh

  background_opacity: 0.85

#+end_src

** Selection

#+begin_src sh

  #selection:
    # This string contains all characters that are used as separators for
    # "semantic words" in Alacritty.
    #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

    # When set to `true`, selected text will be copied to the primary clipboard.
    #save_to_clipboard: false

#+end_src

** Cursor

#+begin_src sh

  #cursor:
    # Cursor style
    #style:
      # Cursor shape
      #
      # Values for `shape`:
      #   - ▇ Block
      #   - _ Underline
      #   - | Beam
      #shape: Block

      # Cursor blinking state
      #
      # Values for `blinking`:
      #   - Never: Prevent the cursor from ever blinking
      #   - Off: Disable blinking by default
      #   - On: Enable blinking by default
      #   - Always: Force the cursor to always blink
      #blinking: Off

    # Vi mode cursor style
    #
    # If the vi mode cursor style is `None` or not specified, it will fall back to
    # the style of the active value of the normal cursor.
    #
    # See `cursor.style` for available options.
    #vi_mode_style: None

    # Cursor blinking interval in milliseconds.
    #blink_interval: 750

    # If this is `true`, the cursor will be rendered as a hollow box when the
    # window is not focused.
    #unfocused_hollow: true

    # Thickness of the cursor relative to the cell width as floating point number
    # from `0.0` to `1.0`.
    #thickness: 0.15

#+end_src

** Live config reload

changes require restart

#+begin_src sh

  #live_config_reload: true

#+end_src

** Shell

You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`. Entries in
`shell.args` are passed unmodified as arguments to the shell.

Default:
  - (macOS) /bin/bash --login
  - (Linux/BSD) user login shell
  - (Windows) powershell

#+begin_src sh

  shell:
   program: /bin/zsh
  #  args:
  #    - --login

  # Startup directory
  #
  # Directory the shell is started in. If this is unset, or `None`, the working
  # directory of the parent process will be used.
  #working_directory: None

#+end_src

** Startup directory

Directory the shell is started in. If this is unset, or `None`, the working directory of the parent
process will be used.

#+begin_src sh

  #working_directory: None

#+end_src

** ESC when alt is pressed

Send ESC (\x1b) before characters when alt is pressed.

#+begin_src sh

  #alt_send_esc: true

#+end_src

** Mouse

#+begin_src sh

  #mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

#+end_src

** Hide when typing

If this is `true`, the cursor is temporarily hidden when typing.

#+begin_src sh

  #hide_when_typing: false

#+end_src

** URL

#+begin_src sh

  #url:
  # URL launcher
  #
  # This program is executed when clicking on a text which is recognized as a
  # URL. The URL is always added to the command as the last parameter.
  #
  # When set to `launcher: None`, URL launching will be disabled completely.
  #
  # Default:
  #   - (macOS) open
  #   - (Linux/BSD) xdg-open
  #   - (Windows) explorer
  #launcher:
  #  program: xdg-open
  #  args: []

  # URL modifiers
  #
  # These are the modifiers that need to be held down for opening URLs when
  # clicking on them. The available modifiers are documented in the key
  # binding section.
  #modifiers: None

#+end_src

** Mouse bindings

Mouse bindings are specified as a list of objects, much like the key
bindings further below.

To trigger mouse bindings when an application running within Alacritty
captures the mouse, the `Shift` modifier is automatically added as a
requirement.

Each mouse binding will specify a:

- `mouse`:

  - Middle
  - Left
  - Right
  - Numeric identifier such as `5`

- `action` (see key bindings)

And optionally:

- `mods` (see key bindings)

#+begin_src sh

  #mouse_bindings:
  #  - { mouse: Middle, action: PasteSelection }

#+end_src

** Key bindings

Key bindings are specified as a list of objects. For example, this is the default paste binding:

`- { key: V, mods: Control|Shift, action: Paste }`

Each key binding will specify a:

- `key`: Identifier of the key pressed

   - A-Z
   - F1-F24
   - Key0-Key9

   A full list with available key codes can be found here:
   https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants

   Instead of using the name of the keys, the `key` field also supports using the scancode of the
   desired key. Scancodes have to be specified as a decimal number. This command will allow you to
   display the hex scancodes for certain keys:

      `showkey --scancodes`.

Then exactly one of:

- `chars`: Send a byte sequence to the running application

   The `chars` field writes the specified string to the terminal. This makes it possible to pass
   escape sequences. To find escape codes for bindings like `PageUp` (`"\x1b[5~"`), you can run the
   command `showkey -a` outside of tmux. Note that applications use terminfo to map escape sequences
   back to keys. It is therefore required to update the terminfo when changing an escape sequence.

- `action`: Execute a predefined action

  - ToggleViMode
  - SearchForward
      Start searching toward the right of the search origin.
  - SearchBackward
      Start searching toward the left of the search origin.
  - Copy
  - Paste
  - IncreaseFontSize
  - DecreaseFontSize
  - ResetFontSize
  - ScrollPageUp
  - ScrollPageDown
  - ScrollHalfPageUp
  - ScrollHalfPageDown
  - ScrollLineUp
  - ScrollLineDown
  - ScrollToTop
  - ScrollToBottom
  - ClearHistory
      Remove the terminal's scrollback history.
  - Hide
      Hide the Alacritty window.
  - Minimize
      Minimize the Alacritty window.
  - Quit
      Quit Alacritty.
  - ToggleFullscreen
  - SpawnNewInstance
      Spawn a new instance of Alacritty.
  - ClearLogNotice
      Clear Alacritty's UI warning and error notice.
  - ClearSelection
      Remove the active selection.
  - ReceiveChar
  - None

- Vi mode exclusive actions:

  - Open
      Open URLs at the cursor location with the launcher configured in
      `url.launcher`.
  - ToggleNormalSelection
  - ToggleLineSelection
  - ToggleBlockSelection
  - ToggleSemanticSelection
      Toggle semantic selection based on `selection.semantic_escape_chars`.

- Vi mode exclusive cursor motion actions:

  - Up
      One line up.
  - Down
      One line down.
  - Left
      One character left.
  - Right
      One character right.
  - First
      First column, or beginning of the line when already at the first column.
  - Last
      Last column, or beginning of the line when already at the last column.
  - FirstOccupied
      First non-empty cell in this terminal row, or first non-empty cell of
      the line when already at the first cell of the row.
  - High
      Top of the screen.
  - Middle
      Center of the screen.
  - Low
      Bottom of the screen.
  - SemanticLeft
      Start of the previous semantically separated word.
  - SemanticRight
      Start of the next semantically separated word.
  - SemanticLeftEnd
      End of the previous semantically separated word.
  - SemanticRightEnd
      End of the next semantically separated word.
  - WordLeft
      Start of the previous whitespace separated word.
  - WordRight
      Start of the next whitespace separated word.
  - WordLeftEnd
      End of the previous whitespace separated word.
  - WordRightEnd
      End of the next whitespace separated word.
  - Bracket
      Character matching the bracket at the cursor's location.
  - SearchNext
      Beginning of the next match.
  - SearchPrevious
      Beginning of the previous match.
  - SearchStart
      Start of the match to the left of the vi mode cursor.
  - SearchEnd
      End of the match to the right of the vi mode cursor.

- Search mode exclusive actions:
  - SearchFocusNext
      Move the focus to the next search match.
  - SearchFocusPrevious
      Move the focus to the previous search match.
  - SearchConfirm
  - SearchCancel
  - SearchClear
      Reset the search regex.
  - SearchDeleteWord
      Delete the last word in the search regex.
  - SearchHistoryPrevious
      Go to the previous regex in the search history.
  - SearchHistoryNext
      Go to the next regex in the search history.

- macOS exclusive actions:
  - ToggleSimpleFullscreen
      Enter fullscreen without occupying another space.

- Linux/BSD exclusive actions:

  - CopySelection
      Copy from the selection buffer.
  - PasteSelection
      Paste from the selection buffer.

- `command`: Fork and execute a specified command plus arguments

   The `command` field must be a map containing a `program` string and an `args` array of command
   line parameter strings. For example: 
      `{ program: "alacritty", args: ["-e", "vttest"] }`

And optionally:

- `mods`: Key modifiers to filter binding actions

   - Command
   - Control
   - Option
   - Super
   - Shift
   - Alt

   Multiple `mods` can be combined using `|` like this:
      `mods: Control|Shift`.
   Whitespace and capitalization are relevant and must match the example.

- `mode`: Indicate a binding for only specific terminal reported modes

   This is mainly used to send applications the correct escape sequences when in different modes.

   - AppCursor
   - AppKeypad
   - Search
   - Alt
   - Vi

   A `~` operator can be used before a mode to apply the binding whenever the mode is *not* active,
   e.g. `~Alt`.

Bindings are always filled by default, but will be replaced when a new binding with the same
triggers is defined. To unset a default binding, it can be mapped to the `ReceiveChar` action.
Alternatively, you can use `None` for a no-op if you do not wish to receive input characters for
that binding.

If the same trigger is assigned to multiple actions, all of them are executed in the order they were
defined in.

#+begin_src sh

  #key_bindings:
  #- { key: Paste,                                       action: Paste          }
  #- { key: Copy,                                        action: Copy           }
  #- { key: L,         mods: Control,                    action: ClearLogNotice }
  #- { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
  #- { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp,  }
  #- { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
  #- { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop,   }
  #- { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }

  # Vi Mode
  #- { key: Space,  mods: Shift|Control, mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode            }
  #- { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }
  #- { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: I,                           mode: Vi|~Search, action: ToggleViMode            }
  #- { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }
  #- { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }
  #- { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }
  #- { key: G,                           mode: Vi|~Search, action: ScrollToTop             }
  #- { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }
  #- { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }
  #- { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }
  #- { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }
  #- { key: Y,                           mode: Vi|~Search, action: Copy                    }
  #- { key: Y,                           mode: Vi|~Search, action: ClearSelection          }
  #- { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }
  #- { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }
  #- { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }
  #- { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }
  #- { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }
  #- { key: Return,                      mode: Vi|~Search, action: Open                    }
  #- { key: K,                           mode: Vi|~Search, action: Up                      }
  #- { key: J,                           mode: Vi|~Search, action: Down                    }
  #- { key: H,                           mode: Vi|~Search, action: Left                    }
  #- { key: L,                           mode: Vi|~Search, action: Right                   }
  #- { key: Up,                          mode: Vi|~Search, action: Up                      }
  #- { key: Down,                        mode: Vi|~Search, action: Down                    }
  #- { key: Left,                        mode: Vi|~Search, action: Left                    }
  #- { key: Right,                       mode: Vi|~Search, action: Right                   }
  #- { key: Key0,                        mode: Vi|~Search, action: First                   }
  #- { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }
  #- { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }
  #- { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }
  #- { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }
  #- { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }
  #- { key: B,                           mode: Vi|~Search, action: SemanticLeft            }
  #- { key: W,                           mode: Vi|~Search, action: SemanticRight           }
  #- { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }
  #- { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }
  #- { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }
  #- { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }
  #- { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }
  #- { key: Slash,                       mode: Vi|~Search, action: SearchForward           }
  #- { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }
  #- { key: N,                           mode: Vi|~Search, action: SearchNext              }
  #- { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }

  # Search Mode
  #- { key: Return,                mode: Search|Vi,  action: SearchConfirm         }
  #- { key: Escape,                mode: Search,     action: SearchCancel          }
  #- { key: C,      mods: Control, mode: Search,     action: SearchCancel          }
  #- { key: U,      mods: Control, mode: Search,     action: SearchClear           }
  #- { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
  #- { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
  #- { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
  #- { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
  #- { key: Down,                  mode: Search,     action: SearchHistoryNext     }
  #- { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }
  #- { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }

  # (Windows, Linux, and BSD only)
  #- { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
  #- { key: C,              mods: Control|Shift,                   action: Copy             }
  #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  #- { key: Insert,         mods: Shift,                           action: PasteSelection   }
  #- { key: Key0,           mods: Control,                         action: ResetFontSize    }
  #- { key: Equals,         mods: Control,                         action: IncreaseFontSize }
  #- { key: Plus,           mods: Control,                         action: IncreaseFontSize }
  #- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
  #- { key: Minus,          mods: Control,                         action: DecreaseFontSize }
  #- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }

  # (Windows only)
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  #- { key: K,              mods: Command, mode: ~Vi|~Search, chars: "\x0c"            }
  #- { key: K,              mods: Command, mode: ~Vi|~Search, action: ClearHistory     }
  #- { key: Key0,           mods: Command,                    action: ResetFontSize    }
  #- { key: Equals,         mods: Command,                    action: IncreaseFontSize }
  #- { key: Plus,           mods: Command,                    action: IncreaseFontSize }
  #- { key: NumpadAdd,      mods: Command,                    action: IncreaseFontSize }
  #- { key: Minus,          mods: Command,                    action: DecreaseFontSize }
  #- { key: NumpadSubtract, mods: Command,                    action: DecreaseFontSize }
  #- { key: V,              mods: Command,                    action: Paste            }
  #- { key: C,              mods: Command,                    action: Copy             }
  #- { key: C,              mods: Command, mode: Vi|~Search,  action: ClearSelection   }
  #- { key: H,              mods: Command,                    action: Hide             }
  #- { key: M,              mods: Command,                    action: Minimize         }
  #- { key: Q,              mods: Command,                    action: Quit             }
  #- { key: W,              mods: Command,                    action: Quit             }
  #- { key: N,              mods: Command,                    action: SpawnNewInstance }
  #- { key: F,              mods: Command|Control,            action: ToggleFullscreen }
  #- { key: F,              mods: Command, mode: ~Search,     action: SearchForward    }
  #- { key: B,              mods: Command, mode: ~Search,     action: SearchBackward   }

#+end_src

** Debug

#+begin_src sh

  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - Off
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

#+end_src

* Neofetch

Neofetch config

** Print information

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  print_info() {
      prin "${cl17}──────────\n Hardware Information \n──────────"
      info " ​ ​ Host\n \n " model
      # the original info is too long
      # info " ​ ​  " cpu
      prin " ​ ​ ${cl17}CPU\n \n \n \n \n ${cl0}AMD Ryzen 5 3500U (8) @ 2.1GHz"
      info " ​ ​ GPU\n \n \n " gpu
      info " ​ ​ Mem\n \n \n " memory
      info " ​ ​ Res\n \n \n " resolution
      prin "${cl17}──────────\n Software Information \n──────────"
      info " ​ ​ OS\n \n \n \n " distro
      info " ​ ​ Kernel" kernel
      info " ​ ​ DE/WM\n " wm
      info " ​ ​ Shell\n " shell
      info " ​ ​ Term\n \n " term
      info " ​ ​ Font\n \n " term_font
      info " ​ ​ Pkgs\n \n " packages
      info " ​ ​ IP\n \n \n \n " local_ip
      prin "${cl17}─────────────────\n Colors \n─────────────────"
      prin
      prin "\n \n \n \n \n ${cl1}\n \n \n \n \n${cl2}\n \n \n \n \n${cl3}\n \n \n \n \n${cl4}\n \n \n \n \n${cl5}\n \n \n \n \n${cl6}\n \n \n \n \n${cl7}\n \n \n \n \n${cl8}\n \n \n \n \n"
      prin "\n \n \n \n \n ${cl9}\n \n \n \n \n${cl10}\n \n \n \n \n${cl11}\n \n \n \n \n${cl12}\n \n \n \n \n${cl13}\n \n \n \n \n${cl14}\n \n \n \n \n${cl15}\n \n \n \n \n${cl16}\n \n \n \n \n"
  }

#+end_src

** Colors for custom colorblocks

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  reset="\033[0m"
  black="\033[1;40m"
  red="\033[1;41m"
  green="\033[1;42m"
  yellow="\033[1;43m"
  blue="\033[1;44m"
  magenta="\033[1;45m"
  cyan="\033[1;46m"
  white="\033[1;47m"
  bblack="\033[1;100m"
  bred="\033[1;101m"
  bgreen="\033[1;102m"
  byellow="\033[1;103m"
  bblue="\033[1;104m"
  bmagenta="\033[1;105m"
  bcyan="\033[1;106m"
  bwhite="\033[1;107m"
  cl0="${reset}"
  cl1="${black}"
  cl2="${red}"
  cl3="${green}"
  cl4="${yellow}"
  cl5="${blue}"
  cl6="${magenta}"
  cl7="${cyan}"
  cl8="${white}"
  cl9="${bblack}"
  cl10="${bred}"
  cl11="${bgreen}"
  cl12="${byellow}"
  cl13="${bblue}"
  cl14="${bmagenta}"
  cl15="${bcyan}"
  cl16="${bwhite}"
  cl17="\033[1;36m"

#+end_src

** Title

Hide/Show Fully qualified domain name.

- Default:  'off'
- Values:   'on', 'off'
- Flag:     --title_fqdn

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  title_fqdn="off"

#+end_src

** Kernel

Shorten the output of the kernel function.

- Default:  'on'
- Values:   'on', 'off'
- Flag:     --kernel_shorthand
- Supports: Everything except *BSDs (except PacBSD and PC-BSD)

- Example:
- on:  '4.8.9-1-ARCH'
- off: 'Linux 4.8.9-1-ARCH'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  kernel_shorthand="on"

#+end_src

** Distro
*** Shorten the output of the distro function

Default:  'off' \\
Values:   'on', 'tiny', 'off' \\
Flag:     --distro_shorthand \\
Supports: Everything except Windows and Haiku

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  distro_shorthand="off"

#+end_src

*** Show/Hide OS architecture

Show 'x86_64', 'x86' and etc in 'Distro:' output.

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --os_arch

Example: \\
on:  'Arch Linux x86_64' \\
off: 'Arch Linux'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  os_arch="off"

#+end_src

** Uptime

Shorten the output of the uptime function

Default: 'on' \\
Values:  'on', 'tiny', 'off' \\
Flag:    --uptime_shorthand

Example: \\
on:   '2 days, 10 hours, 3 mins' \\
tiny: '2d 10h 3m' \\
off:  '2 days, 10 hours, 3 minutes'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  uptime_shorthand="on"

#+end_src

** Memory
*** Show memory pecentage in output

Default: 'off' \\
Values:  'on', 'off' \\
Flag:    --memory_percent

Example: \\
on:   '1801MiB / 7881MiB (22%)' \\
off:  '1801MiB / 7881MiB'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  memory_percent="on"
	
#+end_src

*** Change memory output unit

Default: 'mib' \\
Values:  'kib', 'mib', 'gib' \\
Flag:    --memory_unit

Example: \\
kib  '1020928KiB / 7117824KiB' \\
mib  '1042MiB / 6951MiB' \\
gib: ' 0.98GiB / 6.79GiB'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  memory_unit="mib"

#+end_src

** Packages

Show/Hide Package Manager names.

Default: 'tiny' \\
Values:  'on', 'tiny' 'off' \\
Flag:    --package_managers

Example: \\
on:   '998 (pacman), 8 (flatpak), 4 (snap)' \\
tiny: '908 (pacman, flatpak, snap)' \\
off:  '908'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  package_managers="on"

#+end_src

** Shell
*** Show the path to $SHELL

Default: 'off' \\
Values:  'on', 'off' \\
Flag:    --shell_path

Example: \\
on:  '/bin/bash' \\
off: 'bash'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  shell_path="off"

#+end_src

*** Show $SHELL version

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --shell_version

Example: \\
on:  'bash 4.4.5' \\
off: 'bash'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  shell_version="on"

#+end_src

** CPU
*** CPU speed type

Default:  'bios_limit' \\
Values:   'scaling_cur_freq', 'scaling_min_freq', 'scaling_max_freq', 'bios_limit'. \\
Flag:     --speed_type \\
Supports: Linux with 'cpufreq'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  speed_type="bios_limit"

#+end_src

*** CPU speed shorthand

Default: 'off' \\
Values:  'on', 'off' \\
Flag:    --speed_shorthand

Example: \\
on:    'i7-6500U (4) @ 3.1GHz' \\
off:   'i7-6500U (4) @ 3.100GHz'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  speed_shorthand="on"

#+end_src

*** Enable/Disable CPU brand in output

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --cpu_brand

Example: \\
on:   'Intel i7-6500U' \\
off:  'i7-6500U (4)'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  cpu_brand="on"

#+end_src

*** CPU Speed

Hide/Show CPU speed.

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --cpu_speed

Example: \\
on:  'Intel i7-6500U (4) @ 3.1GHz' \\
off: 'Intel i7-6500U (4)'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  cpu_speed="on"

#+end_src

*** CPU Cores

Display CPU cores in output

Default: 'logical' \\
Values:  'logical', 'physical', 'off' \\
Flag:    --cpu_cores \\
Support: 'physical' doesn't work on BSD

Example: \\
logical:  'Intel i7-6500U (4) @ 3.1GHz' (All virtual cores) \\
physical: 'Intel i7-6500U (2) @ 3.1GHz' (All physical cores) \\
off:      'Intel i7-6500U @ 3.1GHz'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  cpu_cores="logical"

#+end_src

*** CPU Temperature

Hide/Show CPU temperature. Note the temperature is added to the regular CPU function.

Default:  'off' \\
Values:   'C', 'F', 'off' \\
Flag:     --cpu_temp \\
Supports: Linux, BSD

Example: \\
C:   'Intel i7-6500U (4) @ 3.1GHz [27.2°C]' \\
F:   'Intel i7-6500U (4) @ 3.1GHz [82.0°F]' \\
off: 'Intel i7-6500U (4) @ 3.1GHz'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  cpu_temp="off"

#+end_src

** GPU
*** Enable/Disable GPU brand

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --gpu_brand

Example: \\
on:  'AMD HD 7950' \\
off: 'HD 7950'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  gpu_brand="on"

#+end_src

*** Which GPU to display

Default: 'all' \\
Values:  'all', 'dedicated', 'integrated' \\
Flag:    --gpu_type \\
Supports: Linux

Example: \\
all: \\
  GPU1: AMD HD 7950 \\
  GPU2: Intel Integrated Graphics

dedicated: \\
  GPU1: AMD HD 7950

integrated: \\
  GPU1: Intel Integrated Graphics

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  gpu_type="all"

#+end_src

** Resolution

Display refresh rate next to each monitor
Default: 'off' \\
Values:  'on', 'off' \\
Flag:    --refresh_rate \\
Supports: Doesn't work on Windows

Example: \\
on:  '1920x1080 @ 60Hz' \\
off: '1920x1080'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  refresh_rate="on"

#+end_src

** GTK Theme / Icons / Font
*** Shorten output of GTK

Default: 'off' \\
Values:  'on', 'off' \\
Flag:    --gtk_shorthand

Example: \\
on:  'Numix, Adwaita' \\
off: 'Numix [GTK2], Adwaita [GTK3]'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  gtk_shorthand="off"

#+end_src

*** Enable/Disable GTK2

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --gtk2

Example: \\
on:  'Numix [GTK2], Adwaita [GTK3]' \\
off: 'Adwaita [GTK3]'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  gtk2="on"

#+end_src

*** Enable/Disable GTK3

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --gtk3

Example: \\
on:  'Numix [GTK2], Adwaita [GTK3]' \\
off: 'Numix [GTK2]'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  gtk3="on"

#+end_src

** IP address
*** Website to ping for the public IP

Default: 'http://ident.me' \\
Values:  'url' \\
Flag:    --ip_host

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  public_ip_host="http://ident.me"
	
#+end_src

*** Public IP timeout

Default: '2' \\
Values:  'int' \\
Flag:    --ip_timeout

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  public_ip_timeout=2

#+end_src

** Desktop evironment

Show Desktop Environment version

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --de_version

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  de_version="on"

#+end_src

** Disk
*** Which disks to display

The values can be any /dev/sdXX, mount point or directory.

Default: '/' \\
Values:  '/', '/dev/sdXX', '/path/to/drive' \\
Flag:    --disk_show

Example: \\
disk_show=('/' '/dev/sdb1'): \\
     'Disk (/): 74G / 118G (66%)' \\
     'Disk (/mnt/Videos): 823G / 893G (93%)'

disk_show=('/'): \\
     'Disk (/): 74G / 118G (66%)'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  disk_show=('/')

#+end_src

*** Disk subtitle

What to append to the Disk subtitle.

Default: 'mount' \\
Values:  'mount', 'name', 'dir', 'none' \\
Flag:    --disk_subtitle

Example: \\
name:   'Disk (/dev/sda1): 74G / 118G (66%)' \\
        'Disk (/dev/sdb2): 74G / 118G (66%)'

mount:  'Disk (/): 74G / 118G (66%)' \\
        'Disk (/mnt/Local Disk): 74G / 118G (66%)' \\
        'Disk (/mnt/Videos): 74G / 118G (66%)'

dir:    'Disk (/): 74G / 118G (66%)' \\
        'Disk (Local Disk): 74G / 118G (66%)' \\
        'Disk (Videos): 74G / 118G (66%)'

none:   'Disk: 74G / 118G (66%)' \\
        'Disk: 74G / 118G (66%)' \\
        'Disk: 74G / 118G (66%)'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  disk_subtitle="mount"

#+end_src

*** Disk percent

Show/Hide disk percent.

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --disk_percent

Example: \\
on:  'Disk (/): 74G / 118G (66%)' \\
off: 'Disk (/): 74G / 118G'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  disk_percent="on"

#+end_src

** Song
*** Manually specify a music player

Default: 'auto' \\
Values:  'auto', 'player-name' \\
Flag:    --music_player

Available values for 'player-name':

amarok
audacious
banshee
bluemindo
clementine
cmus
deadbeef
deepin-music
dragon
elisa
exaile
gnome-music
gmusicbrowser
gogglesmm
guayadeque
io.elementary.music
iTunes
juk
lollypop
mocp
mopidy
mpd
muine
netease-cloud-music
olivia
playerctl
pogo
pragha
qmmp
quodlibet
rhythmbox
sayonara
smplayer
spotify
strawberry
tauonmb
tomahawk
vlc
xmms2d
xnoise
yarock

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  music_player="auto"

#+end_src

*** Format to display song information

Default: '%artist% - %album% - %title%' \\
Values:  '%artist%', '%album%', '%title%' \\
Flag:    --song_format

Example: \\
default: 'Song: Jet - Get Born - Sgt Major'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  song_format="%artist% - %title%"

#+end_src

*** Print the Artist, Album and Title on separate lines

Default: 'off' \\
Values:  'on', 'off' \\
Flag:    --song_shorthand

Example: \\
on:  'Artist: The Fratellis' \\
     'Album: Costello Music' \\
     'Song: Chelsea Dagger'

off: 'Song: The Fratellis - Costello Music - Chelsea Dagger'

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  song_shorthand="off"

#+end_src

*** 'mpc' arguments 

Specify a host, password etc.

Default: '' \\
Example: mpc_args=(-h HOST -P PASSWORD)

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  mpc_args=()

#+end_src

** Text colors

Default:  'distro' \\
Values:   'distro', 'num' 'num' 'num' 'num' 'num' 'num' \\
Flag:     --colors

Each number represents a different part of the text in this order: 'title', '@', 'underline',
'subtitle', 'colon', 'info'.

Example: \\
colors=(distro)      - Text is colored based on Distro colors \\
colors=(4 6 1 8 8 6) - Text is colored in the order above

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  colors=(distro)

#+end_src

** Text options
*** Toggle bold text

Default:  'on' \\
Values:   'on', 'off' \\
Flag:     --bold

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  bold="on"

#+end_src

*** Enable/Disable Underline

Default:  'on' \\
Values:   'on', 'off' \\
Flag:     --underline

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  underline_enabled="on"

#+end_src

*** Underline character

Default:  '-' \\
Values:   'string' \\
Flag:     --underline_char

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  underline_char="-"

#+end_src

*** Info Separator

Replace the default separator with the specified string.

Default:  ':' \\
Flag:     --separator

Example: \\
separator="->":   'Shell-> bash' \\
separator=" =":   'WM = dwm' \\
separator="  "

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  separator=" "

#+end_src

** Color blocks
*** Color block range

The range of colors to print.

Default:  '0', '15' \\
Values:   'num' \\
Flag:     --block_range

Example:

Display colors 0-7 in the blocks.  (8 colors) \\
neofetch --block_range 0 7

Display colors 0-15 in the blocks. (16 colors) \\
neofetch --block_range 0 15

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  block_range=(0 15)

#+end_src

*** Toggle color blocks

Default:  'on' \\
Values:   'on', 'off' \\
Flag:     --color_blocks

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  color_blocks="on"

#+end_src

*** Color block width in spaces

Default:  '3' \\
Values:   'num' \\
Flag:     --block_width

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  block_width=3

#+end_src

*** Color block height in lines

Default:  '1' \\
Values:   'num' \\
Flag:     --block_height

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  block_height=1

#+end_src

*** Color Alignment

Default: 'auto' \\
Values:  'auto', 'num' \\
Flag:    --col_offset

Number specifies how far from the left side of the terminal (in spaces) to begin printing the
columns, in case you want to e.g. center them under your text.

Example: \\
col_offset="auto" - Default behavior of neofetch \\
col_offset=7      - Leave 7 spaces then print the colors

#+begin_src sh  :tangle ./.config/neofetch/config.conf

  col_offset="auto"

#+end_src

** Progress bar
*** Bar characters

Default:  '-', '=' \\
Values:   'string', 'string' \\
Flag:     --bar_char

Example: \\
neofetch --bar_char 'elapsed' 'total' \\
neofetch --bar_char '-' '='

#+begin_src sh :tangle ./.config/neofetch/config.conf

  bar_char_elapsed="-"
  bar_char_total="="

#+end_src

*** Toggle Bar border

Default:  'on' \\
Values:   'on', 'off' \\
Flag:     --bar_border

#+begin_src sh :tangle ./.config/neofetch/config.conf

  bar_border="on"

#+end_src

*** Progress bar length in spaces

Number of chars long to make the progress bars.

Default:  '15' \\
Values:   'num' \\
Flag:     --bar_length

#+begin_src sh :tangle ./.config/neofetch/config.conf

  bar_length=15

#+end_src

*** Progress bar colors

When set to distro, uses your distro's logo colors.

Default:  'distro', 'distro' \\
Values:   'distro', 'num' \\
Flag:     --bar_colors

Example: \\
neofetch --bar_colors 3 4 \\
neofetch --bar_colors distro 5

#+begin_src sh :tangle ./.config/neofetch/config.conf

  bar_color_elapsed="distro"
  bar_color_total="distro"

#+end_src

*** Info display

Display a bar with the info.

Default: 'off' \\
Values:  'bar', 'infobar', 'barinfo', 'off' \\
Flags:   --cpu_display \\
         --memory_display \\
         --battery_display \\
         --disk_display

Example: \\
bar:     '[---=======]' \\
infobar: 'info [---=======]' \\
barinfo: '[---=======] info' \\
off:     'info'

#+begin_src sh :tangle ./.config/neofetch/config.conf

  cpu_display="on"
  memory_display="on"
  battery_display="on"
  disk_display="on"

#+end_src

** Backend settings
*** Image backend

Default:  'ascii' \\
Values:   'ascii', 'caca', 'chafa', 'jp2a', 'iterm2', 'off', \\
          'pot', 'termpix', 'pixterm', 'tycat', 'w3m', 'kitty' \\
Flag:     --backend

#+begin_src sh :tangle ./.config/neofetch/config.conf

  image_backend="ascii"

#+end_src

*** Image source

Which image or ascii file to display.

'auto' will pick the best image source for whatever image backend is used. In ascii mode, distro
ascii art will be used and in an image mode, your wallpaper will be used.

Default:  'auto' \\
Values:   'auto', 'ascii', 'wallpaper', '/path/to/img', '/path/to/ascii', '/path/to/dir/' \\
          'command output (neofetch --ascii "$(fortune | cowsay -W 30)")' \\
Flag:     --source

#+begin_src sh :tangle ./.config/neofetch/config.conf

  image_source="auto"

#+end_src

** Ascii options
*** Ascii distro

Which distro's ascii art to display.

Default: 'auto' \\
Values:  'auto', 'distro_name' \\
Flag:    --ascii_distro
NOTE: AIX, Alpine, Anarchy, Android, Antergos, antiX, "AOSC OS",
      "AOSC OS/Retro", Apricity, ArcoLinux, ArchBox, ARCHlabs,
      ArchStrike, XFerience, ArchMerge, Arch, Artix, Arya, Bedrock,
      Bitrig, BlackArch, BLAG, BlankOn, BlueLight, bonsai, BSD,
      BunsenLabs, Calculate, Carbs, CentOS, Chakra, ChaletOS,
      Chapeau, Chrom*, Cleanjaro, ClearOS, Clear_Linux, Clover,
      Condres, Container_Linux, CRUX, Cucumber, Debian, Deepin,
      DesaOS, Devuan, DracOS, DarkOs, DragonFly, Drauger, Elementary,
      EndeavourOS, Endless, EuroLinux, Exherbo, Fedora, Feren, FreeBSD,
      FreeMiNT, Frugalware, Funtoo, GalliumOS, Garuda, Gentoo, Pentoo,
      gNewSense, GNOME, GNU, GoboLinux, Grombyang, Guix, Haiku, Huayra,
      Hyperbola, janus, Kali, KaOS, KDE_neon, Kibojoe, Kogaion,
      Korora, KSLinux, Kubuntu, LEDE, LFS, Linux_Lite,
      LMDE, Lubuntu, Lunar, macos, Mageia, MagpieOS, Mandriva,
      Manjaro, Maui, Mer, Minix, LinuxMint, MX_Linux, Namib,
      Neptune, NetBSD, Netrunner, Nitrux, NixOS, Nurunner,
      NuTyX, OBRevenge, OpenBSD, openEuler, OpenIndiana, openmamba,
      OpenMandriva, OpenStage, OpenWrt, osmc, Oracle, OS Elbrus, PacBSD,
      Parabola, Pardus, Parrot, Parsix, TrueOS, PCLinuxOS, Peppermint,
      popos, Porteus, PostMarketOS, Proxmox, Puppy, PureOS, Qubes, Radix,
      Raspbian, Reborn_OS, Redstar, Redcore, Redhat, Refracted_Devuan,
      Regata, Rosa, sabotage, Sabayon, Sailfish, SalentOS, Scientific,
      Septor, SereneLinux, SharkLinux, Siduction, Slackware, SliTaz,
      SmartOS, Solus, Source_Mage, Sparky, Star, SteamOS, SunOS,
      openSUSE_Leap, openSUSE_Tumbleweed, openSUSE, SwagArch, Tails,
      Trisquel, Ubuntu-Budgie, Ubuntu-GNOME, Ubuntu-MATE, Ubuntu-Studio,
      Ubuntu, Venom, Void, Obarun, windows10, Windows7, Xubuntu, Zorin,
      and IRIX have ascii logos
NOTE: Arch, Ubuntu, Redhat, and Dragonfly have 'old' logo variants.
      Use '{distro name}_old' to use the old logos.
NOTE: Ubuntu has flavor variants.
      Change this to Lubuntu, Kubuntu, Xubuntu, Ubuntu-GNOME,
      Ubuntu-Studio, Ubuntu-Mate  or Ubuntu-Budgie to use the flavors.
NOTE: Arcolinux, Dragonfly, Fedora, Alpine, Arch, Ubuntu,
      CRUX, Debian, Gentoo, FreeBSD, Mac, NixOS, OpenBSD, android,
      Antrix, CentOS, Cleanjaro, ElementaryOS, GUIX, Hyperbola,
      Manjaro, MXLinux, NetBSD, Parabola, POP_OS, PureOS,
      Slackware, SunOS, LinuxLite, OpenSUSE, Raspbian,
      postmarketOS, and Void have a smaller logo variant.
      Use '{distro name}_small' to use the small variants.

#+begin_src sh :tangle ./.config/neofetch/config.conf

  ascii_distro="auto"

#+end_src

*** Ascii colors

Default:  'distro' \\
Values:   'distro', 'num' 'num' 'num' 'num' 'num' 'num' \\
Flag:     --ascii_colors

Example: \\
ascii_colors=(distro)      - Ascii is colored based on Distro colors \\
ascii_colors=(4 6 1 8 8 6) - Ascii is colored using these colors

#+begin_src sh :tangle ./.config/neofetch/config.conf

  ascii_colors=(distro)

#+end_src

*** Bold ascii logo

Whether or not to bold the ascii logo.

Default: 'on' \\
Values:  'on', 'off' \\
Flag:    --ascii_bold

#+begin_src sh :tangle ./.config/neofetch/config.conf

  ascii_bold="on"

#+end_src

** Image options
*** Image loop

Setting this to on will make neofetch redraw the image constantly until Ctrl+C is pressed. This
fixes display issues in some terminal emulators.

Default:  'off' \\
Values:   'on', 'off' \\
Flag:     --loop

#+begin_src sh :tangle ./.config/neofetch/config.conf

  image_loop="off"

#+end_src

*** Thumbnail directory

Default: '~/.cache/thumbnails/neofetch' \\
Values:  'dir'

#+begin_src sh :tangle ./.config/neofetch/config.conf

  thumbnail_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/thumbnails/neofetch"

#+end_src

*** Crop mode

Default:  'normal' \\
Values:   'normal', 'fit', 'fill' \\
Flag:     --crop_mode

See this wiki page to learn about the fit and fill options.
https://github.com/dylanaraps/neofetch/wiki/What-is-Waifu-Crop%3F

#+begin_src sh :tangle ./.config/neofetch/config.conf

  crop_mode="normal"
	
#+end_src

*** Crop offset

Note: Only affects 'normal' crop mode.

Default:  'center' \\
Values:   'northwest', 'north', 'northeast', 'west', 'center' \\
          'east', 'southwest', 'south', 'southeast' \\
Flag:     --crop_offset

#+begin_src sh :tangle ./.config/neofetch/config.conf

  crop_offset="center"

#+end_src

*** Image size

The image is half the terminal width by default.

Default: 'auto' \\
Values:  'auto', '00px', '00%', 'none' \\
Flags:   --image_size \\
         --size

#+begin_src sh :tangle ./.config/neofetch/config.conf

  image_size="auto"
	
#+end_src

*** Gap between image and text

Default: '3' \\
Values:  'num', '-num' \\
Flag:    --gap

#+begin_src sh :tangle ./.config/neofetch/config.conf

  gap=2

#+end_src

*** Image offsets

Only works with the w3m backend.

Default: '0' \\
Values:  'px' \\
Flags:   --xoffset \\
         --yoffset

#+begin_src sh :tangle ./.config/neofetch/config.conf

  yoffset=0
  xoffset=0

#+end_src

*** Image background color

Only works with the w3m backend.

Default: '' \\
Values:  'color', 'blue' \\
Flag:    --bg_color

#+begin_src sh :tangle ./.config/neofetch/config.conf

  background_color=

#+end_src

** Misc Options

Stdout mode

Turn off all colors and disables image backend (ASCII/Image). Useful for piping into another
command.

Default: 'off' \\
Values: 'on', 'off'

#+begin_src sh :tangle ./.config/neofetch/config.conf

  stdout="off"

#+end_src


